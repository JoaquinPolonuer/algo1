        -:    0:Source:/home/joacopolo/Documents/exactas/algo1/laboratorio/clase6/template-alumnos/ej2/llenarTaxis.cpp
        -:    0:Graph:/home/joacopolo/Documents/exactas/algo1/laboratorio/clase6/template-alumnos/cmake-build-debug-coverage/CMakeFiles/LaboTesting.dir/ej2/llenarTaxis.cpp.gcno
        -:    0:Data:/home/joacopolo/Documents/exactas/algo1/laboratorio/clase6/template-alumnos/cmake-build-debug-coverage/CMakeFiles/LaboTesting.dir/ej2/llenarTaxis.cpp.gcda
        -:    0:Runs:1
        -:    1:
function _Z12llenarTaxis1iii called 2 returned 100% blocks executed 100%
        2:    2:int llenarTaxis1(int g1, int g2, int g3) {
        2:    3:	int res = g3 + (g2 + 1) / 2; //+ (g1 + 3) / 4;
        -:    4:    // el error esta en sumar (g1 + 3) / 4
        -:    5:    // si las cantidades son iguales, siempre puedo juntar los
        -:    6:    // grupos de 1 con los de 3
        -:    7:    // Yo haria g3 + (g2 + 1) / 2
        2:    8:	return res;
        2:    8-block  0
        -:    9:}
        -:   10:
function _Z12llenarTaxis2iii called 4 returned 100% blocks executed 100%
        4:   11:int llenarTaxis2(int g1, int g2, int g3) {
        4:   12:	int res = g3;
        -:   13:
        4:   14:	if (g1 <= g3) {
        4:   14-block  0
branch  0 taken 2 (fallthrough)
branch  1 taken 2
        2:   15:		g1 = 0;
        2:   15-block  0
        -:   16:	} else {
        2:   17:		g1 = g1 - g3;
        2:   17-block  0
        -:   18:	}
        -:   19:
        4:   20:	return res + (g2 + 1) / 2 + (g1 + 3) / 4;
        4:   20-block  0
        -:   21:    // creo que la implementacion es correcta
        -:   22:}
        -:   23:
function _Z12llenarTaxis3iii called 5 returned 100% blocks executed 100%
        5:   24:int llenarTaxis3(int g1, int g2, int g3) {
        5:   25:	int res = g3;
        -:   26:
        5:   27:	if (g1 <= g3) {
        5:   27-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 4
        1:   28:		g1 = 0;
        1:   28-block  0
        -:   29:	} else {
        4:   30:		g1 = g1 - g3;
        4:   30-block  0
        -:   31:	}
        -:   32:
        5:   33:	res = res + g2 / 2;
        5:   34:	if (g2 % 2 == 1){ // 0) {
        5:   34-block  0
branch  0 taken 5 (fallthrough)
branch  1 taken 0
        5:   35:        res += 1; // esto antes no estaba
        5:   36:        if (g1 >= 2) {
        5:   36-block  0
branch  0 taken 3 (fallthrough)
branch  1 taken 2
        3:   37:			g1 = g1 - 2;
        3:   37-block  0
        -:   38:		} else {
        2:   39:			g1 = 0;
        2:   39-block  0
        -:   40:		}
        -:   41:	}
        -:   42:
        5:   43:	return res + (g1 + 3) / 4;
        5:   43-block  0
        -:   44:    // el error era que antes preguntabamos si g2 era par, pero
        -:   45:    // teniamos que preguntar si dos era IMPAR
        -:   46:    // si es asi, debiamos sumar 1 a res pq estamos agregando un auto nuevo
        -:   47:}
